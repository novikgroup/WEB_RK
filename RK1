from operator import itemgetter


class Emp:
    """Книга"""
    def __init__(self, id, name, prs, dep_id):
        self.id = id
        self.name = name
        self.prs = prs
        self.dep_id = dep_id


class Dep:
    """Книжный магазин"""
    def __init__(self, id, name):
        self.id = id
        self.name = name


# Книжные магазины
deps = [
    Dep(1, 'Московский дом книги'),
    Dep(2, 'Читай город'),
    Dep(3, 'Достоевский'),
    Dep(4, 'Молодая гвардия'),
    Dep(5, 'Ноты'),
    Dep(6, '(Республика'),
]


# Книги
emps = [
    Emp(1, 'Три товарища',1200, 1),
    Emp(2, 'Маленький принц', 350, 2),
    Emp(3, 'Мастер и маргарита', 1000, 3),
    Emp(4, 'Война и мир', 3500,4),
    Emp(5, 'А зори здесь тихие', 2000, 5),
    Emp(6, 'Демиан', 2100, 3),
]


def main():
    """Основная функция"""


    # Соединение данных один-ко-многим 
    one_to_many = [(e.name, e.prs, d.name) 
        for d in deps 
        for e in emps 
        if e.dep_id==d.id]
    
    print('Задание 1')
    res_11 = sorted(one_to_many, key=itemgetter(2))
    print(res_11)
    
    print('\nЗадание 2')
    res_12_unsorted = []
    # Перебираем все 
    for d in deps:
        # Список книг
        d_emps = list(filter(lambda i: i[2]==d.name, one_to_many))
        # Если книги нет        
        if len(d_emps) > 0:
            # Цена книги
            d_prss = [prs for _,prs,_ in d_emps]
            # Суммарная цена книг в книжном магазине
            d_prss_sum = sum(d_prss)
            res_12_unsorted.append((d.name, d_prss_sum))


    # Сортировка
    res_12 = sorted(res_12_unsorted, key=itemgetter(1), reverse=True)
    print(res_12)


if __name__ == '__main__':
    main()

---------------------------------------------------------------------------------------------------------------------------------------------------------
# Результат

Задание 1
[('Мастер и маргарита', 1000, 'Достоевский'), ('Демиан', 2100, 'Достоевский'), ('Война и мир', 3500, 'Молодая гвардия'), ('Три товарища', 1200, 'Московский дом книги'), ('А зори здесь тихие', 2000, 'Ноты'), ('Маленький принц', 350, 'Читай город')]

Задание 2
[('Молодая гвардия', 3500), ('Достоевский', 3100), ('Ноты', 2000), ('Московский дом книги', 1200), ('Читай город', 350)]

=== Code Execution Successful ===
